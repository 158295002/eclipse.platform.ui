Some notes about the CNF in attempt to understand things.

30 Nov 08 FRU

Navigator Content

The purpose of the navigatorContent extension (NCE) is to bind a content provider
and label provider to the navigator under the right circumstances depending
on what is selected.

A navigator content descriptor has a one-to-one correspondence with the
navigator content extension, which is the higher level object representing
the navigator content.




Overriding

An NCE may specify that it overrides another through the user of the override
mechanism where it specifies the NCE extension ID of the extension to override.

When doing the processing associated with the label and content provider, it is possible
that multiple NCEs meet the criteria for processing based on their triggerPoints and/or 
possibleChildren.  When this happens, the NCEs are ordered in a tree based
on the overrides specification, and then with that based on priority.
The first NCE in the tree that provides the answer (label or content) being
sought is used.

When the NCE is bound to the viewer (using the contentExtension element) it may
specify that that NCE serves as "root content" for that viewer, which allows
the viewer to start with an initial set of NCEs to process the root(s) [why exactly --
I understand intuitively but can't put it into words].


Pipelining

In some cases, it is desirable to have multiple NCEs be invoked during
content provider processing to modify the objects to be returned by the
content provider.  This is done using the pipelining mechanism where each NCE
in the tree has the opportunity to modify the objects to be returned by the
content provider.  There are also hooks for these pipelined NCEs to 
be invoked at the Add/Remove/Update/Refresh methods on the viewer.

Dependency



Questions/Issues:

1) In NavigatorContentServicedLabelProvider, seems that we look for label providers
by looking for matching NCEs by possibleChild.  It seems to make more sense to 
look for them by triggerPoint, since possibleChild is used mainly in the content
provider getParent() case.

2) Should the NCE class and NavigatorContentDescriptor classes be combined?

3) In NavigatorContentServiceLabel provider, there seems to be special
processing to handle overriding instead of using the normal processing to
get only the relevant NCEs.  Also, the way to get the NCEs is different
depending on whether doing a getImage() or getForeground() for example
and I don't understand why.  Also NavigatorContentServiceDescriptionProvider does not
seem to consider overrides at all.

4) The triggerPoints and possibleChildren descriptions in the exsd are confusing:

The triggerPoints expression defines the nodes in a tree that should cause this extension to be invoked for children.

The possibleChildren expression defines the nodes in a tree that could be contributed by this extension. 
Clients should describes when this content extension could provide a parent for elements that match the expression.

I think a clearer description is:

The triggerPoints expression defines the tree nodes for which this extension
(and associated content/label providers) is to be invoked.

The possibleChildren expression defines the content provider to be selected when processing 
the ITreeContentProvider.getParent() call.


