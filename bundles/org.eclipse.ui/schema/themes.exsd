<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.ui">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.ui" id="TThthemes" name="Themes"/>
      </appInfo>
      <documentation>
         This extension point is used to customize the UI of tabs and views.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="theme" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="colorDefinition" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="fontDefinition" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="gradientDefinition" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="themeElementCategory" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified identifier of the target extension point
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  an optional identifier of the extension instance
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  an optional name of the extension instance
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="theme">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="name" icon="icon"/>
         </appInfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="colorOverride" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="gradientOverride" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="fontOverride" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="description" minOccurs="0" maxOccurs="1"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  a unique name that will be used to identify this theme.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  a translatable name that will be used in the workbench window menu bar to represent this perspective.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="themeElementCategory">
      <annotation>
         <documentation>
            a logical grouping of theme element definitions.  This category may include colors, fonts and gradients.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="description"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  the id for this presentation category.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string">
            <annotation>
               <documentation>
                  a class that implements org.eclipse.ui.IPresentationPreview.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.ui.IPresentationPreview"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="label" type="string">
            <annotation>
               <documentation>
                  a translatable name of the presentation category to be presented to the user.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="colorDefinition">
      <annotation>
         <documentation>
            a symbolic color definition.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="colorFactory" minOccurs="0" maxOccurs="1"/>
            <element ref="description" minOccurs="0" maxOccurs="1"/>
         </sequence>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  a unique id that can be used to identify this color definition.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="label" type="string">
            <annotation>
               <documentation>
                  a translatable name of the color to be presented to the user.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="defaultsTo" type="string">
            <annotation>
               <documentation>
                  the id of another color definition that is the default setting for the receiver. When there is no preference for this color the color registry will have the value of defaultsTo set for it in the registry.

Only one of defaultsTo or value may be defined.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="value" type="string">
            <annotation>
               <documentation>
                  The default value of this color.  The value may be specified in the following ways:
&lt;ul&gt;
&lt;li&gt;a String containing comma seperated integers in the form red,green,blue 
&lt;li&gt;a String that maps to an SWT color constant (ie:  COLOR_RED).
&lt;li&gt;a String in the form blend(v1-v2).  v1 and v1 may be RGB triples, SWT constants or nested blend(v1-v2) calls.  This function will blend one color with another.
&lt;ul&gt;
Only one of defaultsTo or value may be defined.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="categoryId" type="string">
            <annotation>
               <documentation>
                  the optional id of the presentation category this color belongs to.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="colorFactory" type="string">
            <annotation>
               <documentation>
                  a class that implements IColorFactory.  This may be used instead of value to specify the default value of the color.  Please be advised that this should be used with caution - usage of this attribute will cause plugin activation.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="gradientDefinition">
      <annotation>
         <documentation>
            a symbolic gradient definition.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="colorFactory" minOccurs="0" maxOccurs="1"/>
            <element ref="gradientPart" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="description" minOccurs="0" maxOccurs="1"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  a unique id that can be used to identify this color definition.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="label" type="string">
            <annotation>
               <documentation>
                  a translatable name of the gradient to be presented to the user.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="direction">
            <annotation>
               <documentation>
                  The direction of this gradient.  Must be vertical or horizontal. In the absence of this attribute, horizontal is assumed.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="vertical">
                  </enumeration>
                  <enumeration value="horizontal">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="initialValue" type="string">
            <annotation>
               <documentation>
                  The starting value of this gradient.  The value may be specified in the following ways:
&lt;ul&gt;
&lt;li&gt;a String containing comma seperated integers in the form red,green,blue 
&lt;li&gt;a String that maps to an SWT color constant (ie:  COLOR_RED).
&lt;li&gt;a String in the form blend(v1-v2).  v1 and v1 may be RGB triples, SWT constants or nested blend(v1-v2) calls.  This function will blend one color with another.
&lt;ul&gt;
Only one of defaultsTo or value may be defined.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="categoryId" type="string">
            <annotation>
               <documentation>
                  the optional id of the presentation category this gradient belongs to.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="colorFactory" type="string">
            <annotation>
               <documentation>
                  a class that implements IColorFactory.  This may be used instead of initialValue to specify the default value of the color.  Please be advised that this should be used with caution - usage of this attribute will cause plugin activation.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="fontDefinition">
      <complexType>
         <sequence>
            <element ref="description" minOccurs="0" maxOccurs="1"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  a unique name that can be used to identify this font definition.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="label" type="string" use="required">
            <annotation>
               <documentation>
                  a translatable name of the font to be presented to the user.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="value" type="string">
            <annotation>
               <documentation>
                  the font value.  This is in the form: &lt;code&gt;&lt;it&gt;fontname&lt;/it&gt;-&lt;it&gt;style&lt;/it&gt;-&lt;it&gt;height&lt;/it&gt;&lt;/code&gt; where &lt;code&gt;&lt;it&gt;fontname&lt;/it&gt;&lt;/code&gt; is the name of a font, &lt;code&gt;&lt;it&gt;style&lt;/it&gt;&lt;/code&gt; is a font style (one of &lt;code&gt;&quot;regular&quot;&lt;/code&gt;, &lt;code&gt;&quot;bold&quot;&lt;/code&gt;, &lt;code&gt;&quot;italic&quot;&lt;/code&gt;, or &lt;code&gt;&quot;bold italic&quot;&lt;/code&gt;) and &lt;code&gt;&lt;it&gt;height&lt;/it&gt;&lt;/code&gt; is an integer representing the font height.&lt;/p&gt;
&lt;p&gt;Example: &lt;code&gt;Times New Roman-bold-36&lt;/code&gt;.&lt;/p&gt;  
&lt;p&gt;
Only one (or neither) of value or defaultsTo may be used.
&lt;/p&gt;
               </documentation>
            </annotation>
         </attribute>
         <attribute name="categoryId" type="string">
            <annotation>
               <documentation>
                  the optional id of the presentation category this font belongs to.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="defaultsTo" type="string">
            <annotation>
               <documentation>
                  the id of another font definition that is the default setting for the receiver. When there is no preference for this font the font registry will have the value of defaultsTo set for it in the registry.
&lt;p&gt;
Only one or neither of value or defaultsTo may be used.
&lt;/p&gt;
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="gradientPart">
      <annotation>
         <documentation>
            A gradient part describes an additional color segment that exists in the gradient.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="colorFactory" minOccurs="0" maxOccurs="1"/>
         </sequence>
         <attribute name="percentage" type="string" use="required">
            <annotation>
               <documentation>
                  The percentage point at which this color appears.  This must be &gt;= 0 and &lt;= 100.  Additionally, the sequence of gradientParts must be ordered by this attribute.  Ie:  a gradientPart with percentage 10 cannot be added after a gradientPart with percentage 50.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="value" type="string" use="required">
            <annotation>
               <documentation>
                  The value of this gradient part.  The value may be specified in the following ways:
&lt;ul&gt;
&lt;li&gt;a String containing comma seperated integers in the form red,green,blue 
&lt;li&gt;a String that maps to an SWT color constant (ie:  COLOR_RED).
&lt;li&gt;a String in the form blend(v1-v2).  v1 and v1 may be RGB triples, SWT constants or nested blend(v1-v2) calls.  This function will blend one color with another.
&lt;ul&gt;
Only one of defaultsTo or value may be defined.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="colorFactory" type="string">
            <annotation>
               <documentation>
                  a class that implements IColorFactory.  This may be used instead of value to specify the default value of the color.  Please be advised that this should be used with caution - usage of this attribute will cause plugin activation.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="colorOverride">
      <annotation>
         <documentation>
            Allows overriding of colors defined in the org.eclipse.ui.colorDefinitions extension point.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="colorFactory" minOccurs="0" maxOccurs="1"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  a unique id that can be used to identify this color definition override.  This should match an existing color identifier.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="value" type="string" use="required">
            <annotation>
               <documentation>
                  The overriding value of this color.  The value may be specified in the following ways:
&lt;ul&gt;
&lt;li&gt;a String containing comma seperated integers in the form red,green,blue 
&lt;li&gt;a String that maps to an SWT color constant (ie:  COLOR_RED).
&lt;li&gt;a String in the form blend(v1-v2).  v1 and v1 may be RGB triples, SWT constants or nested blend(v1-v2) calls.  This function will blend one color with another.
&lt;ul&gt;
Only one of defaultsTo or value may be defined.
Unlike a colorDefinition, you may not supply a defaultsTo for an override.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="fontOverride">
      <annotation>
         <documentation>
            Allows overriding of gradients defined in the org.eclipse.ui.fontDefinitions extension point.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  a unique id that can be used to identify this font definition override.  This should match an existing font identifier.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="value" type="string" use="required">
            <annotation>
               <documentation>
                  the font value.  This is in the form: &lt;code&gt;&lt;it&gt;fontname&lt;/it&gt;-&lt;it&gt;style&lt;/it&gt;-&lt;it&gt;height&lt;/it&gt;&lt;/code&gt; where &lt;code&gt;&lt;it&gt;fontname&lt;/it&gt;&lt;/code&gt; is the name of a font, &lt;code&gt;&lt;it&gt;style&lt;/it&gt;&lt;/code&gt; is a font style (one of &lt;code&gt;&quot;regular&quot;&lt;/code&gt;, &lt;code&gt;&quot;bold&quot;&lt;/code&gt;, &lt;code&gt;&quot;italic&quot;&lt;/code&gt;, or &lt;code&gt;&quot;bold italic&quot;&lt;/code&gt;) and &lt;code&gt;&lt;it&gt;height&lt;/it&gt;&lt;/code&gt; is an integer representing the font height.&lt;/p&gt;
&lt;p&gt;Example: &lt;code&gt;Times New Roman-bold-36&lt;/code&gt;.&lt;/p&gt;
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="gradientOverride">
      <annotation>
         <documentation>
            Allows overriding of gradients defined in the org.eclipse.ui.colorDefinitions extension point.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="colorFactory" minOccurs="0" maxOccurs="1"/>
            <element ref="gradientPart" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  a unique id that can be used to identify this gradient definition override.  This should match an existing gradient identifier.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="direction">
            <annotation>
               <documentation>
                  the direction of this gradient.  Must be vertical or horizontal. In the absence of this attribute, horizontal is assumed.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="vertical">
                  </enumeration>
                  <enumeration value="horizontal">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="initialValue" type="string" use="required">
            <annotation>
               <documentation>
                  The starting initial value of this gradient.  The value may be specified in the following ways:
&lt;ul&gt;
&lt;li&gt;a String containing comma seperated integers in the form red,green,blue 
&lt;li&gt;a String that maps to an SWT color constant (ie:  COLOR_RED).
&lt;li&gt;a String in the form blend(v1-v2).  v1 and v1 may be RGB triples, SWT constants or nested blend(v1-v2) calls.  This function will blend one color with another.
&lt;ul&gt;
Only one of defaultsTo or value may be defined.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="description" type="string">
      <annotation>
         <documentation>
            a short description of the elements usage.
         </documentation>
      </annotation>
   </element>

   <element name="colorFactory">
      <annotation>
         <documentation>
            the element version of the colorFactory attribute.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="parameter" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  a class that implements IColorFactory.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="plugin" type="string">
            <annotation>
               <documentation>
                  the plugin that contains the class.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="parameter">
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="value" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         &lt;p&gt;
Copyright (c) 2003 IBM Corporation and others.
All rights reserved.   This program and the accompanying materials are made available under the terms of the Common Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/cpl-v10.html
      </documentation>
   </annotation>

</schema>
