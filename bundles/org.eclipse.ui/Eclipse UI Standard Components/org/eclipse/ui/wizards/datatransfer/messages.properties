DataTransfer.export = Export
FileSystemExportOperation.problemsExporting = Problems were encountered during export:
DataTransfer.exportingTitle = Exporting:
DataTransfer.cannotOverwrite = Cannot overwrite file: {0}
DataTransfer.errorExporting = Error exporting {0}
DataTransfer.importTitle = Import
ImportOperation.creatingFolder = Creating folder:
DataTransfer.importTask = Importing:
ImportOperation.cannotCopy = Can not copy root file system.
DataTransfer.emptyString = 
ImportOperation.importProblems = Problems were encountered during import:
ImportOperation.openStreamError = Error opening input stream for {0}
ImportOperation.closeStreamError = Could not close input stream for {0}
DataTransfer.scanningChildren = Scanning for children...
DataTransfer.scanningMatching = Scanning for matching files...
DataTransfer.selectTypes = Select &Types...
DataTransfer.selectAll = &Select All
DataTransfer.deselectAll = &Deselect All
DataTransfer.exportProblems = Export Problems
DataTransfer.resourcesExport = What resources do you want to export?
DataTransfer.exportLocation = Where do you want to export resources to?
DataTransfer.options = Options:
DataTransfer.resourceTypesExport = Select the resource types to export.
DataTransfer.typeSelection = Resource Type Selection
DataTransfer.retrievingContent = Retrieving content:
DataTransfer.internalErrorTitle = Internal error
DataTransfer.contentProblemsTitle = Content Retrieval Problems
DataTransfer.contentProblemsMessage = Problems occurred retrieving content for the selected resources.
DataTransfer.ensureLocalException = Exception in {0}.ensureResourcesLocal(): {1}
DataTransfer.internalErrorDetails = Internal error: {0}
DataTransfer.createTargetDirectory = Target directory does not exist.  Would you like to create it?
DataTransfer.directoryCreationError = Target directory could not be created.
ExportFile.overwriteExisting = Overwrite existing files without warning
ExportFile.createDirectoryStructure = Create directory structure
ExportFile.createDirectoriesForSelected = Create directories for selected folders
DataTransfer.browse = B&rowse...
DataTransfer.browse2 = Bro&wse...
DataTransfer.fileSystemTitle = File system
FileExport.exportLocalFileSystem = Export resources to the local file system.
DataTransfer.information = Information
FileExport.noneSelected = There are no resources currently selected for export.
DataTransfer.directory = Directory:
DataTransfer.selectDestination = Select the destination directory.
FileExport.directoryExists = Target directory already exists as a file.
DataTransfer.typeDelimiter = ,
FileImport.selectSource = Select the source directory.
FileImport.importProblems = Import Problems
FileImport.sourceTitle = Directory:
FileImport.selectResources = Select the resources to import.
FileImport.invalidSource = Source directory is not valid or has not been specified.
FileImport.importFileSystem = Import resources from the local file system.
DataTransfer.allFiles = All files matching this criteria
DataTransfer.oneSelected = 1 file selected
FileImport.overwriteExisting = Overwrite existing resources without warning
FileImport.createComplete = Create complete folder structure
FileImport.selectTypes = Select the types to import.
FileImport.typeSelectionTitle = Type Selection
FileImport.noneSelected = There are no resources currently selected for import.
What_type_of_files_do_you_ = What type of files do you want to import?
FileImport.filesofType = Files of type:
FileImport.edit = Edit...
DataTransfer.details = Details...
DataTransfer.allTypes = All types
FileImport.filesSelected = {0} files selected
FileExport.destinationEmpty = Please enter a destination.
FileExport.createDirectoryStructure = Create directory structure for files
FileImport.sourceEmpty = Source must not be empty.
ImportPage.specifyFolder = Folder must be specified.
ImportPage.mustBeAccessible = Folder must be accessible.
DataTransfer.folder = Folder:
ImportPage.selectFolder = Select a folder to import into.
ImportPage.resourceDestination = Where do you want the imported resources to go?
ZipExport.overwriteFile = Overwrite existing file without warning
ZipExport.compressContents = Compress the contents of the file
ZipExport.exportTitle = Zip file
ZipExport.description = Export resources to a Zip file on the local file system.
ZipExport.destinationLabel = Zip file:
ZipExport.mustBeFile = Export destination must be a file, not a directory.
ZipExport.alreadyExists = Target file already exists.  Would you like to overwrite it?
ZipExport.alreadyExistsError = Export destination already exists and cannot be overwritten.
ImportPage.oneSelected = 1 entry selected
ZipImport.couldNotClose = Could not close file {0}
ZipImport.description = Import the contents of a Zip file from the local file system.
ZipImport.badFormat = Source file is not of proper format.
ZipImport.couldNotRead = Source file could not be read.
ZipImport.entriesSelected = {0} entries selected
ZipExport.cannotOpen = Unable to open destination file: {0}
ZipExport.cannotClose = Unable to close destination file: {0}
FileImport.whichTypesImport = What types of files do you wish to import?
